void backtrack(vector<int> &A, vector<vector<int>> &res, vector<int> temp, int x){
    res.push_back(temp);
    for(int i=x;i<A.size();i++){
        temp.push_back(A[i]);
        backtrack(A, res, temp, i+1);
        temp.pop_back();
    }
    
}

vector<vector<int> > Solution::subsets(vector<int> &A) {
    sort(A.begin(), A.end());
    vector<vector<int>> res;
    vector<int> temp;
    backtrack(A, res,temp, 0);
    
    return res;
}
